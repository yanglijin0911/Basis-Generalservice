<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!-- 配置文件路径 -->
    <!--<properties resource="src/main/resources/mybatis_generator/generatorConfig.properties"/>-->
    <properties resource="mybatis/generator/generatorConfig.properties"/>
    <!--数据库驱动包路径 -->
    <!--<classPathEntry location="${drive.class.path}"/>-->

    <context id="MySQLTables" targetRuntime="MyBatis3Simple" defaultModelType="flat">
        <!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；
一般保留默认值，遇到数据库关键字（Java关键字），使用 columnOverride 覆盖 -->
        <property name="autoDelimitKeywords" value="true"/>
        <!-- 生成的Java文件的编码 -->
        <property name="javaFileEncoding" value="UTF-8"/>
        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化XML代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>

        <!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； -->
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>

        <!-- TKmybatis配置 -->
        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
            <property name="mappers" value="tk.mybatis.mapper.common.Mapper"/>
            <property name="caseSensitive" value="true"/>
            <property name="forceAnnotation" value="true"/>
            <property name="beginningDelimiter" value="`"/>
            <property name="endingDelimiter" value="`"/>
        </plugin>

        <commentGenerator>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!--数据库连接信息 -->
        <jdbcConnection driverClass="${jdbc.driver}" connectionURL="${jdbc.url}"
                        userId="${jdbc.username}" password="${jdbc.password}">
        </jdbcConnection>

        <!-- java类型处理器
         用于处理DB中的类型到Java中的类型，默认使用JavaTypeResolverDefaultImpl；
         注意一点，默认会先尝试使用Integer，Long，Short等来对应DECIMAL和 NUMERIC数据类型；
        -->
        <javaTypeResolver type="org.mybatis.generator.internal.types.JavaTypeResolverDefaultImpl">
            <!--
                true：使用BigDecimal对应DECIMAL和 NUMERIC数据类型
                false：默认,
                    scale>0;length>18：使用BigDecimal;
                    scale=0;length[10,18]：使用Long；
                    scale=0;length[5,9]：使用Integer；
                    scale=0;length<5：使用Short；
             -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!--生成的model 包路径 -->
        <javaModelGenerator targetPackage="${model.package}" targetProject="${target.code.project}">
            <!--<property name="enableSubPackages" value="ture"/>-->
            <!--<property name="trimStrings" value="true"/>-->
        </javaModelGenerator>

        <!--生成xml mapper文件 路径 -->
        <sqlMapGenerator targetPackage="${xml.mapper.package}" targetProject="${target.mapper.project}">
            <!--<property name="enableSubPackages" value="ture"/>-->
        </sqlMapGenerator>

        <!-- 生成的Dao接口 的包路径 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="${dao.package}" targetProject="${target.code.project}">
        </javaClientGenerator>

        <!--对应数据库表名 -->
        <!--<table tableName="domain_data_dictionary" />-->
        <!--<table tableName="data_model" />-->
        <!--<table tableName="database_connectivity" />-->
        <!--<table tableName="rt_function_module" />-->
        <!--<table tableName="count_provincial_num"/>-->
        <!--<table tableName="top_brand_by_city"/>-->
        <table tableName="city_code"/>
        <!--<table tableName="properties"/>-->
        <!--<table tableName="interface_method"/>-->
        <!--<table tableName="interface_method_parameter"/>-->

        <!--<table tableName="database_management_system">-->
        <!--<generatedKey column="id" sqlStatement="mysql" identity="true"/>-->
        <!--</table>-->
        <!--<table tableName="database_connectivity">-->
        <!--<generatedKey column="id" sqlStatement="mysql" identity="true"/>-->
        <!--</table>-->
        <!--<table tableName="database">-->
        <!--<generatedKey column="id" sqlStatement="mysql" identity="true"/>-->
        <!--</table>-->
        <!--<table tableName="database_table">-->
        <!--<generatedKey column="id" sqlStatement="mysql" identity="true"/>-->
        <!--</table>-->
        <!--<table tableName="database_table_field">-->
        <!--<generatedKey column="id" sqlStatement="mysql" identity="true"/>-->
        <!--</table>-->
        <!--<table tableName="metadata_dictionary">-->
        <!--<generatedKey column="id" sqlStatement="mysql" identity="true"/>-->
        <!--</table>-->
        <!--<table tableName="domain_data_dictionary">-->
        <!--<generatedKey column="id" sqlStatement="mysql" identity="true"/>-->
        <!--</table>-->
        <!--<table tableName="interface_method_parameter">-->
        <!--<generatedKey column="id" sqlStatement="mysql" identity="true"/>-->
        <!--</table>-->
        <!--<table tableName="data_model">-->
            <!--<generatedKey column="id" sqlStatement="mysql" identity="true"/>-->
        <!--</table>-->
        <!--<table tableName="data_model_field">-->
            <!--<generatedKey column="id" sqlStatement="mysql" identity="true"/>-->
        <!--</table>-->
    </context>
</generatorConfiguration>
